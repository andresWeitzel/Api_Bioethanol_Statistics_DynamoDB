
service: api-bioetanol-estadisticas-dynamodb-aws

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region : us-east-1
  memorySize: 512
  timeout : 10
  environment: 
    ${file(./serverless_ssm.yml)}
  apiGateway:
    apiKeys:
      - name : xApiKey
        value : ${file(./serverless_ssm.yml):X_API_KEY}
  logs:
    # Enable REST API logs
    restApi:
      accessLogging: true
      format: "requestId: $context.requestId"
      executionLogging: true
      level: INFO
      fullExecutionData: true
      role: arn:aws:iam::xxxx:role
      roleManagedExternally: false         

plugins:
    - serverless-dynamodb-local
    - serverless-offline-ssm
    - serverless-offline  

functions:
# -- BIOETANOL PRECIOS --
  insertBioetanolPrecios:
    handler: src/controllers/bioetanolPrecios/insert.handler
    description: Function to insert an object in the bioethanol prices table
    timeout: 10
    events:
      - http:
          method: post
          path: /${file(./serverless_ssm.yml):API_VERSION}/bioetanol-precios/insert
          private: true
  updateBioetanolPrecios:
    handler: src/controllers/bioetanolPrecios/update.handler
    description: Function to update an object in the bioethanol prices table
    timeout: 10
    events:
      - http:
          method: put
          path: /${file(./serverless_ssm.yml):API_VERSION}/bioetanol-precios/update/{id}
          private: true          
  getAllBioetanolPrecios:
    handler: src/controllers/bioetanolPrecios/getAll.handler
    description: Function to obtain all the objects of the bioethanol prices table
    timeout: 10
    events:
      - http:
          method: get
          path: /${file(./serverless_ssm.yml):API_VERSION}/bioetanol-precios/list
          private: true
  getByIdBioetanolPrecios:
    handler: src/controllers/bioetanolPrecios/getById.handler
    description: Function to obtain all the objects of the bioethanol prices table according to id
    timeout: 10
    events:
      - http:
          method: get
          path: /${file(./serverless_ssm.yml):API_VERSION}/bioetanol-precios/id/{id}
          private: true   
  getLikeCreatedAtBioetanolPrecios:
    handler: src/controllers/bioetanolPrecios/getLikeCreatedAt.handler
    description: Function to obtain all the objects of the bioethanol prices table according to the creation date
    timeout: 10
    events:
      - http:
          method: get
          path: /${file(./serverless_ssm.yml):API_VERSION}/bioetanol-precios/created-at/{createdAt}
          private: true  
  getLikePeriodoBioetanolPrecios:
    handler: src/controllers/bioetanolPrecios/getLikePeriodo.handler
    description: Function to obtain all the objects of the bioethanol prices table according to the periodo
    timeout: 10
    events:
      - http:
          method: get
          path: /${file(./serverless_ssm.yml):API_VERSION}/bioetanol-precios/periodo/{periodo}
          private: true
  getLikeBioetMaizBioetanolPrecios:
    handler: src/controllers/bioetanolPrecios/getLikeBioetMaiz.handler
    description: Function to obtain all the objects of the bioethanol prices table according to the bioethanol maiz price
    timeout: 10
    events:
      - http:
          method: get
          path: /${file(./serverless_ssm.yml):API_VERSION}/bioetanol-precios/bioetanol-maiz/{bioetMaiz}
          private: true 
  getLikeBioetCanAzucarBioetanolPrecios:
    handler: src/controllers/bioetanolPrecios/getLikeBioetCanAzucar.handler
    description: Function to obtain all the objects of the bioethanol prices table according to the bioethanol ca√±a azucar price
    timeout: 10
    events:
      - http:
          method: get
          path: /${file(./serverless_ssm.yml):API_VERSION}/bioetanol-precios/bioetanol-cana-azucar/{bioetCanAzucar}
          private: true
           
# -- BIOETANOL TOTAL --                    

custom:  
  serverless-offline-ssm:
    stages:
      - dev
    ssm: 
      ${file(./serverless_ssm.yml)}
  dynamodb:
    stages:
      - dev
    start:
      inMemory: true
      migrate: true
      seed: true
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002  

resources:
  - ${file(src/resources/api-gateway.yml)} 
  - ${file(src/resources/dynamo-table.yml)}         
      
